


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    5 00000000 E0008000 
                       T1      equ              0xE0008000
    6 00000000         
    7 00000000 00000000 
                       IR      equ              0           ; Interrupt Registe
                                                            r. The IR can be wr
                                                            itten to clear
    8 00000000         ; interrupts. The IR can be read to identify which of
    9 00000000         ; eight possible interrupt sources are pending. 
   10 00000000 00000004 
                       TCR     equ              4           ; Timer Control Reg
                                                            ister. The TCR is u
                                                            sed to control
   11 00000000         ; the Timer Counter functions. The Timer Counter can
   12 00000000         ; be disabled or reset through the TCR. 
   13 00000000 00000014 
                       MCR     equ              0x14        ; Match Control Reg
                                                            ister. The MCR is u
                                                            sed to control
   14 00000000         ; if an interrupt is generated and if the TC is reset
   15 00000000         ; when a Match occurs.
   16 00000000 00000018 
                       MR0     equ              0x18        ; Match Register 0.
                                                             MR0 can be enabled
                                                             through the
   17 00000000         ; MCR to reset the TC, stop both the TC and PC,
   18 00000000         ; and/or generate an interrupt every time MR0
   19 00000000         ; matches the TC. 
   20 00000000         
   21 00000000 00000002 
                       TimerCommandReset
                               equ              2
   22 00000000 00000001 
                       TimerCommandRun
                               equ              1
   23 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   24 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   25 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   26 00000000         
   27 00000000         ; VIC Stuff -- UM, Table 41
   28 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   29 00000000 00000010 
                       IntEnable
                               equ              0x10        ; Interrupt Enable 
                                                            Register. This regi



ARM Macro Assembler    Page 2 


                                                            ster controls which
                                                             of the
   30 00000000         ; 32 interrupt requests and software interrupts are enab
                       led to
   31 00000000         ; contribute to FIQ or IRQ.
   32 00000000 00000030 
                       VectAddr
                               equ              0x30        ; Vector Address Re
                                                            gister. When an IRQ
                                                             interrupt occurs, 
                                                            the
   33 00000000         ; IRQ service routine can read this register and jump to
                        the
   34 00000000         ; value read.
   35 00000000 00000100 
                       VectAddr0
                               equ              0x100       ; Vector address 0 
                                                            register. Vector Ad
                                                            dress Registers 0-1
                                                            5
   36 00000000         ; hold the addresses of the Interrupt Service routines (
                       ISRs)
   37 00000000         ; for the 16 vectored IRQ slots
   38 00000000 00000200 
                       VectCtrl0
                               equ              0x200       ; Vector control 0 
                                                            register. Vector Co
                                                            ntrol Registers 0-1
                                                            5 each
   39 00000000         ; control one of the 16 vectored IRQ slots. Slot 0 has t
                       he
   40 00000000         ; highest priority and slot 15 the lowest.
   41 00000000         
   42 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   43 00000000 00000010 
                       Timer0Mask
                               equ              1 <<Timer0ChannelNumber 
                                                            ; UM, Table 63
   44 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   45 00000000         
   46 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   47 00000000                 IMPORT           main
   48 00000000                 EXPORT           start
   49 00000000         start
   50 00000000         
   51 00000000         ; Initialisation code
   52 00000000         ; Initialise the VIC
   53 00000000 E59F00A8        ldr              r0, =VIC    ; looking at you, V
                                                            IC!
   54 00000004         
   55 00000004 E59F10A8        ldr              r1, =irqhan
   56 00000008 E5801100        str              r1, [r0, #VectAddr0] ; associat
                                                            e our interrupt han
                                                            dler with Vectored 



ARM Macro Assembler    Page 3 


                                                            Interrupt 0
   57 0000000C         
   58 0000000C E3A01024        mov              r1, #Timer0ChannelNumber+(1<<IR
Qslot_en)
   59 00000010 E5801200        str              r1, [r0, #VectCtrl0] ; make Tim
                                                            er 0 interrupts the
                                                             source of Vectored
                                                             Interrupt 0
   60 00000014         
   61 00000014 E3A01010        mov              r1, #Timer0Mask
   62 00000018 E5801010        str              r1, [r0, #IntEnable] ; enable T
                                                            imer 0 interrupts t
                                                            o be recognised by 
                                                            the VIC
   63 0000001C         
   64 0000001C E3A01000        mov              r1, #0
   65 00000020 E5801030        str              r1, [r0, #VectAddr] ; remove an
                                                            y pending interrupt
                                                             (may not be needed
                                                            )
   66 00000024         
   67 00000024         ; Initialise Timer 0
   68 00000024 E59F008C        ldr              r0, =T0     ; looking at you, T
                                                            imer 0!
   69 00000028         
   70 00000028 E3A01002        mov              r1, #TimerCommandReset
   71 0000002C E5801004        str              r1, [r0, #TCR]
   72 00000030         
   73 00000030 E3A010FF        mov              r1, #TimerResetAllInterrupts
   74 00000034 E5801000        str              r1, [r0, #IR]
   75 00000038         
   76 00000038 E59F107C        ldr              r1, =(14745600/200) - 1 ; 5 ms 
                                                            = 1/200 second
   77 0000003C E5801018        str              r1, [r0, #MR0]
   78 00000040         
   79 00000040 E3A01003        mov              r1, #TimerModeResetAndInterrupt
   80 00000044 E5801014        str              r1, [r0, #MCR]
   81 00000048         
   82 00000048 E3A01001        mov              r1, #TimerCommandRun
   83 0000004C E5801004        str              r1, [r0, #TCR]
   84 00000050         
   85 00000050         ; Setup GPIO
   86 00000050 E0028008 
                       IO0DIR  equ              0xE0028008
   87 00000050 E0028004 
                       IO0SET  equ              0xE0028004
   88 00000050 E002800C 
                       IO0CLR  equ              0xE002800C
   89 00000050 E0028000 
                       IO0PIN  equ              0xE0028000
   90 00000050         
   91 00000050 E59F0068        ldr              r0, =IO0DIR
   92 00000054 E3A01826        ldr              r1, =0x00260000 ; Select P0.17,
                                                             P0.18, P0.21
   93 00000058 E5801000        str              r1, [r0]    ; Make them outputs
                                                            
   94 0000005C E59F0060        ldr              r0, =IO0SET
   95 00000060 E5801000        str              r1, [r0]    ; Set them to turn 
                                                            the LEDs off



ARM Macro Assembler    Page 4 


   96 00000064 E59F105C        ldr              r1, =IO0CLR
   97 00000068         
   98 00000068         ; From here, initialisation is finished, so it should be
                        the main body of the main program
   99 00000068 E59F205C 
                       wh1     ldr              r2, =leds
  100 0000006C E3A04008        mov              r4, #8
  101 00000070 E4923004        ldr              r3, [r2], #4
  102 00000074 E5813000        str              r3, [r1]
  103 00000078 E59F5050 
                       dowh1   ldr              r5, =timer
  104 0000007C E5956000        ldr              r6, [r5]
  105 00000080 E35600C8        cmp              r6, #200
  106 00000084 1A000005        bne              endif1
  107 00000088 E3A06000        mov              r6, #0
  108 0000008C E5856000        str              r6, [r5]
  109 00000090 E2444001        sub              r4, r4, #1
  110 00000094 E5803000        str              r3, [r0]
  111 00000098 E4923004        ldr              r3, [r2], #4
  112 0000009C E5813000        str              r3, [r1]
  113 000000A0 E3540000 
                       endif1  cmp              r4, #0
  114 000000A4 1AFFFFF3        bne              dowh1
  115 000000A8 EAFFFFEE        b                wh1         ; branch always
  116 000000AC         
  117 000000AC         ;main program execution will never drop below the statem
                       ent above.
  118 000000AC EAFFFFFE 
                       stop    B                stop
  119 000000B0         
  120 000000B0 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028008 
              E0028004 
              E002800C 
              00000000 
              00000000         AREA             InterruptStuff, CODE, READONLY
  121 00000000 E24EE004 
                       irqhan  sub              lr, lr, #4
  122 00000004 E92D4003        stmfd            sp!, {r0-r1, lr} ; the lr will 
                                                            be restored to the 
                                                            pc
  123 00000008         
  124 00000008         ;this is the body of the interrupt handler
  125 00000008         
  126 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  127 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  128 00000008 E59F0024        ldr              r0, =timer
  129 0000000C E5901000        ldr              r1, [r0]
  130 00000010 E2811001        add              r1, r1, #1
  131 00000014 E5801000        str              r1, [r0]
  132 00000018         
  133 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  134 00000018         ;i.e. we 'acknowledge' the interrupt



ARM Macro Assembler    Page 5 


  135 00000018         
  136 00000018 E59F0018        ldr              r0, =T0
  137 0000001C E3A01001        mov              r1, #TimerResetTimer0Interrupt
  138 00000020 E5801000        str              r1, [r0, #IR] ; remove MR0 inte
                                                            rrupt request from 
                                                            timer
  139 00000024         
  140 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  141 00000024 E59F0010        ldr              r0, =VIC
  142 00000028 E3A01000        mov              r1, #0
  143 0000002C E5801030        str              r1, [r0, #VectAddr] ; reset VIC
                                                            
  144 00000030 E8FD8003        ldmfd            sp!, {r0-r1, pc}^ ; return from
                                                             interrupt, restori
                                                            ng pc from lr
  145 00000034         ; and also restoring the CPSR
  146 00000034         
  147 00000034         
  148 00000034         
  149 00000034 00000000 
              E0004000 
              FFFFF000         AREA             LEDS, DATA, READONLY
  150 00000000 00000000 
                       leds    dcd              0x00000000  ;BLACK
  151 00000004 00020000        dcd              0x00020000  ;RED
  152 00000008 00200000        dcd              0x00200000  ;GREEN
  153 0000000C 00040000        dcd              0x00040000  ;BLUE
  154 00000010 00240000        dcd              0x00240000  ;CYAN
  155 00000014 00060000        dcd              0x00060000  ;MAGENTA
  156 00000018 00220000        dcd              0x00220000  ;YELLOW
  157 0000001C 00260000        dcd              0x00260000  ;WHITE
  158 00000020         
  159 00000020                 AREA             TIMER, DATA, READWRITE
  160 00000000 00000000 
                       timer   dcd              0x00000000
  161 00000004         
  162 00000004         
  163 00000004         
  164 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 46 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
dowh1 00000078

Symbol: dowh1
   Definitions
      At line 103 in file App.s
   Uses
      At line 114 in file App.s
Comment: dowh1 used once
endif1 000000A0

Symbol: endif1
   Definitions
      At line 113 in file App.s
   Uses
      At line 106 in file App.s
Comment: endif1 used once
start 00000000

Symbol: start
   Definitions
      At line 49 in file App.s
   Uses
      At line 48 in file App.s
Comment: start used once
stop 000000AC

Symbol: stop
   Definitions
      At line 118 in file App.s
   Uses
      At line 118 in file App.s
Comment: stop used once
wh1 00000068

Symbol: wh1
   Definitions
      At line 99 in file App.s
   Uses
      At line 115 in file App.s
Comment: wh1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 120 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 121 in file App.s
   Uses
      At line 55 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LEDS 00000000

Symbol: LEDS
   Definitions
      At line 149 in file App.s
   Uses
      None
Comment: LEDS unused
leds 00000000

Symbol: leds
   Definitions
      At line 150 in file App.s
   Uses
      At line 99 in file App.s
Comment: leds used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TIMER 00000000

Symbol: TIMER
   Definitions
      At line 159 in file App.s
   Uses
      None
Comment: TIMER unused
timer 00000000

Symbol: timer
   Definitions
      At line 160 in file App.s
   Uses
      At line 103 in file App.s
      At line 128 in file App.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 88 in file App.s
   Uses
      At line 96 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 86 in file App.s
   Uses
      At line 91 in file App.s
Comment: IO0DIR used once
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 89 in file App.s
   Uses
      None
Comment: IO0PIN unused
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 87 in file App.s
   Uses
      At line 94 in file App.s
Comment: IO0SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 7 in file App.s
   Uses
      At line 74 in file App.s
      At line 138 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 44 in file App.s
   Uses
      At line 58 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 29 in file App.s
   Uses
      At line 62 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 13 in file App.s
   Uses
      At line 80 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 16 in file App.s
   Uses
      At line 77 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 4 in file App.s
   Uses
      At line 68 in file App.s
      At line 136 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 5 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 71 in file App.s
      At line 83 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 42 in file App.s
   Uses
      At line 43 in file App.s
      At line 58 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 43 in file App.s
   Uses
      At line 61 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 21 in file App.s
   Uses
      At line 70 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 22 in file App.s
   Uses
      At line 82 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 23 in file App.s
   Uses
      At line 79 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 25 in file App.s
   Uses
      At line 73 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 24 in file App.s
   Uses
      At line 137 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 28 in file App.s
   Uses
      At line 53 in file App.s
      At line 141 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 32 in file App.s
   Uses
      At line 65 in file App.s
      At line 143 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 35 in file App.s
   Uses
      At line 56 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 38 in file App.s
   Uses
      At line 59 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 47 in file App.s
   Uses
      None
Comment: main unused
1 symbol
373 symbols in table
